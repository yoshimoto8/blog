{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yoshimotokoki/project/blog/pages/posts/[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fs from \"fs\";\nimport path from \"path\";\nimport Layout from \"../../components/Layout\";\nimport { listContentFiles, readContentFile } from \"../../lib/content-loader\";\nexport default function Post(params) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: params.title,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-meta\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: params.published\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-body\",\n      dangerouslySetInnerHTML: {\n        __html: params.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n/**\n * ページコンポーネントで使用する値を用意する\n */\n\nexport async function getStaticProps({\n  params\n}) {\n  const content = await readContentFile({\n    fs,\n    slug: params.slug\n  });\n  return {\n    props: _objectSpread({}, content)\n  };\n}\n/**\n * 有効な URL パラメータを全件返す\n */\n\nexport async function getStaticPaths() {\n  const paths = listContentFiles({\n    fs\n  }).map(filename => ({\n    params: {\n      slug: path.parse(filename).name\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/yoshimotokoki/project/blog/pages/posts/[slug].js"],"names":["fs","path","Layout","listContentFiles","readContentFile","Post","params","title","published","__html","content","getStaticProps","slug","props","getStaticPaths","paths","map","filename","parse","name","fallback"],"mappings":";;;;;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,0BAAlD;AAEA,eAAe,SAASC,IAAT,CAAcC,MAAd,EAAsB;AACnC,sBACE,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,MAAM,CAACC,KAAtB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAA,kBAAOD,MAAM,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AACE,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEH,MAAM,CAACI;AAAjB;AAD3B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;AAED;AACA;AACA;;AACA,OAAO,eAAeC,cAAf,CAA8B;AAAEL,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMI,OAAO,GAAG,MAAMN,eAAe,CAAC;AAAEJ,IAAAA,EAAF;AAAMY,IAAAA,IAAI,EAAEN,MAAM,CAACM;AAAnB,GAAD,CAArC;AAEA,SAAO;AACLC,IAAAA,KAAK,oBACAH,OADA;AADA,GAAP;AAKD;AAED;AACA;AACA;;AACA,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMC,KAAK,GAAGZ,gBAAgB,CAAC;AAAEH,IAAAA;AAAF,GAAD,CAAhB,CACXgB,GADW,CACNC,QAAD,KAAe;AAClBX,IAAAA,MAAM,EAAE;AACNM,MAAAA,IAAI,EAAEX,IAAI,CAACiB,KAAL,CAAWD,QAAX,EAAqBE;AADrB;AADU,GAAf,CADO,CAAd;AAOA,SAAO;AAAEJ,IAAAA,KAAF;AAASK,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD","sourcesContent":["import fs from \"fs\"\nimport path from \"path\"\n\nimport Layout from \"../../components/Layout\"\nimport { listContentFiles, readContentFile } from \"../../lib/content-loader\"\n\nexport default function Post(params) {\n  return (\n    <Layout title={params.title}>\n      <div className=\"post-meta\">\n        <span>{params.published}</span>\n      </div>\n      <div className=\"post-body\"\n        dangerouslySetInnerHTML={{ __html: params.content }}\n      />\n    </Layout>\n  )\n}\n\n/**\n * ページコンポーネントで使用する値を用意する\n */\nexport async function getStaticProps({ params }) {\n  const content = await readContentFile({ fs, slug: params.slug })\n\n  return {\n    props: {\n      ...content\n    }\n  }\n}\n\n/**\n * 有効な URL パラメータを全件返す\n */\nexport async function getStaticPaths() {\n  const paths = listContentFiles({ fs })\n    .map((filename) => ({\n      params: {\n        slug: path.parse(filename).name,\n      }\n    }))\n\n  return { paths, fallback: false }\n}\n"]},"metadata":{},"sourceType":"module"}